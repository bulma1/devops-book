apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-frontend-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: sample-app-frontend-pods
    spec:
      serviceAccountName: sample-app-frontend-service-account
      containers:
        - name: sample-app-frontend
          image: naul23541/sample-app-frontend:0.0.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: production
      imagePullSecrets:
        - name: docker-registry-credentials  # Replace this with your secret name
  selector:
    matchLabels:
      app: sample-app-frontend-pods
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-app-frontend-service-account                   
---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-frontend-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: sample-app-frontend-pods
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: allow-without-mtls
  namespace: default
spec:
  selector:
    matchLabels:
      app: sample-app-frontend-pods 
  mtls:
    mode: DISABLE                   
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy                                     
metadata:
  name: sample-app-frontend-allow-http
spec:
  selector:
    matchLabels:
      app: sample-app-frontend-pods                           
  action: ALLOW                                               
  rules:                                                      
  - to:
    - operation:
        methods: ["GET"]
